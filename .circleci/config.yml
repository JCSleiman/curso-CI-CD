version: 2
jobs:
  deployprod:
    docker:
      - image: circleci/python:3
      
    working_directory: ~/repo
    
    steps:
      - checkout
      - add_ssh_keys:
         fingerprints:
            - "a2:08:0e:94:8f:47:d3:99:1b:8d:f5:27:d5:0a:fb:a9"
      - run:
          name: Deploy to the Prod Server.
          command: |
                 ssh -o "StrictHostKeyChecking=no" $USER@$PROD_IP '
                     cd $BUILD_LOCATION
                     pwd
                     git checkout $CIRCLE_BRANCH &&
                     git reset --hard origin/$CIRCLE_BRANCH &&
                     git pull origin $CIRCLE_BRANCH
                     '
          
  deploytest:
    docker:
      - image: circleci/python:3
      
    working_directory: ~/repo
      
    steps:
      - checkout
      
      - add_ssh_keys:
         fingerprints:
            - "74:3b:67:37:b0:59:cd:a3:6c:27:e5:98:6f:92:59:3f"
            
      - run:
         name: Install dependencies
         command: |
           python3 -m venv venv
           . venv/bin/activate
           pip install -r requirements.txt
           
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py #test
            
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Deploy to the Test Server
          command: |
                 ssh -o "StrictHostKeyChecking=no" $TEST_USER@$TEST_IP '
                     cd $TEST_BUILD_LOCATION
                     pwd
                     git checkout $CIRCLE_BRANCH &&
                     git reset --hard origin/$CIRCLE_BRANCH &&
                     git pull origin $CIRCLE_BRANCH
                     docker stop `docker ps -l -q`
                     docker rm `docker ps -l -q`
                     docker build -t erizo .
                     docker run -p 5000:5000 -d erizo
                     '

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py #test

            
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - deployprod:
          filters:
            branches:
              only:
                - master
      - deploytest:
          filters:
            branches:
              only:
                - test
